; -------- Variables -----------------
(defvar showCal false)
(defvar open-power false)
(defvar open-audio false)

; -------- Polls & Listens ---------------------
(defpoll time 
  :interval "10s"
  "date '+%I:%M %p | %b, %d'"
)

(defpoll day
  :interval "1h"
  "date '%d'"
)

(defpoll month
  :interval "1h"
  "date '%d'"
)

(deflisten ws-data  
  :json true
  "~/.config/eww/scripts/event.sh"
)

(deflisten audio
  :json true
  "~/.config/eww/scripts/audio.sh"
)

(deflisten network
  :json true
  "~/.config/eww/scripts/network.sh"
)

; -------- Windows ---------------------
(defwindow monitor1
  :monitor 0
  :geometry (geometry :x "0%" :y "20px" :width "98%" :height "30px" :anchor "top center")
  :stacking "fg"
  :exclusive true
  :reserve (struts :distance "40px" :side "top")
  :windowtype "dock"
  :wm-ignore false
  (bar)
)  

(defwindow monitor2
  :monitor 1
  :geometry (geometry :x "0%" :y "20px" :width "98%" :height "30px" :anchor "top center")
  :stacking "fg"
  :exclusive true
  :reserve (struts :distance "40px" :side "top")
  :windowtype "dock"
  :wm-ignore false
  (bar)
)

(defwindow monitor3
  :monitor 2
  :geometry (geometry :x "0%" :y "20px" :width "98%" :height "30px" :anchor "top center")
  :stacking "fg"
  :exclusive true
  :reserve (struts :distance "40px" :side "top")
  :windowtype "dock"
  :wm-ignore false
  (bar)
)  

(defwindow right-menu-window
    :monitor 0
    :geometry (geometry :x "1%" :y "20px" :anchor "top right")
    :stacking "fg"
    :windowtype "utility"
    :exclusive false
    :wm-ignore true
    (power-menu)
)

(defwindow right-menu-window2
    :monitor 0
    :geometry (geometry :x "1%" :y "20px" :anchor "top right")
    :stacking "fg"
    :windowtype "utility"
    :exclusive false
    :wm-ignore true
    (audio-menu)
)

(defwindow center-menu-window
    :monitor 0
    :geometry (geometry :x "1%" :y "20px" :anchor "top center")
    :stacking "fg"
    :windowtype "utility"
    :exclusive false
    :wm-ignore true
    (cal)
)


; -------- Bar Widget ---------------------

(defwidget bar []
  (centerbox 
    :orientation "h" 
    :class "bar"
    (workspaces)
    (clock)
    (sidebar)
    )
)

; -------- Left Side Widgets -------

(defwidget workspaces []
  (box 
    :class "workspaces"
    :orientation "h"
    :halign "start"
    :spacing 10
    :class "workspaces"
    ;; :height "20px"   ; <- optional, only if you want it
    (for ws in {ws-data.occupied}
      (button 
        :class {ws.id == ws-data.active ? "active-ws" : "ws"}
        :onclick "hyprctl dispatch workspace ${ws.id}"
        (image
          :path {ws.id == ws-data.active
                  ? "/home/andrew/Pictures/lit-bonfire.png"
                  : "/home/andrew/Pictures/unlit-bonfire.png"}
          :image-width 16
          :image-height 16
        )
      )
    )
  )
)

; -------- Middle Widgets ----------------

(defwidget clock []
  (eventbox
    :onclick {"eww update showCal=${!showCal}"}
    :cursor "pointer"
    (box
      (label :text time)
      )
    )  
)

; -------- Right Side Widgets -------------

(defwidget sidebar []
  (box
    :orientation "h"
    :halign "end"
    :spacing 16
    :space-evenly true
    (system-tray)
    (network)
    (audio)
    (power)
  )
)

(defwidget audio []
  (eventbox
    :orientation "h"
    :class "audio"
    :cursor "pointer"
    :onclick {"eww update open-audio=${!open-audio}"}
    (box
      :halign "h"
      :spacing 4
      (tooltip
        (label 
          :style "color: #fff;" 
          :text {audio.default.description})
        (label 
          :text {audio.mute || audio.volume==0 ? "": " ${audio.volume}"})
      )
    )
  )
)

(defwidget system-tray []
  (systray 
    :spacing 2
    :halign "end"
    :space-evenly true
    :orientation "h"
    :icon-size 18
    :prepend-new true
  )
)

(defwidget power []
  (eventbox
    :cursor "pointer"
    :onclick {"eww update open-power=${!open-power}"}
    (label :text "")
  )
)

(defwidget network []
  (eventbox
    :onclick "networkmanager_dmenu"
    :cursor "pointer"
    :halign "center"
      (for network in {network.connection_list}
        (tooltip
          (label :style "color: #fff;" :text {network.state=="connected" ? "${network.connection} ${network.signal}%" : ""})
          (label 
          :class "icon"
          :text {network.type=="ethernet" ? "" : "" }
          :style "margin: 0 auto"
          )
        )
      ) 
  )
)
; -------- Hidden Menus ------------------------------------

(defwidget power-menu []
    (revealer
        :reveal open-power
        :transition "slidedown"
        :duration "500ms"
        (eventbox
          :onhoverlost "eww update open-power=false"
          (box
            :orientation "v"
            :class "hidden-box"
            (button
                :onclick "shutdown now"
                :class "button"
                (label :text "    shutdown")
            )
            (button
              :onclick "hyprctl dispatch exit"
              :class "button"
              (label :text "    logout")  
            )   
            (button
              :onclick "reboot"
              :class "button"
              (label :text "    reboot")
            )
          )
        )
    )
    
)

(defwidget audio-menu []
  (revealer
    :reveal open-audio
    :transition "slidedown"
    :duration "500ms"
    (eventbox
      :onhoverlost "eww update open-audio=false"
      (box
        :orientation "v"
        :class "hidden-box"
        (for device in {audio.list}
          (button 
            :onclick "pactl set-default-sink ${device.name}; eww update open-audio=false"
            :class "button"
            (label :text "${device.description}")
          ) 
        )
      )
    )   
  ) 
)

(defwidget cal []
  (revealer
    :reveal showCal
    :transition "slidedown"
    :duration "500ms"
    (eventbox
      :onhoverlost "eww update showCal=false"
      (calendar
        :day {day}
        :month {month}
        :showheading true
      )
    )
  )
)
