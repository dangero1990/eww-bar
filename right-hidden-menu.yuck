(defwindow right-hidden-menu
    :monitor 0
    :geometry (geometry :x "1.5%" :y "20px" :height "80%" :anchor "top right")
    :stacking "fg"
    :windowtype "utility"
    :exclusive false
    :wm-ignore true
    (hidden-menus)
)

(defwidget hidden-menus []
    (revealer
        :reveal open-hidden-menu
        :transition "slideleft"
        :duration "200ms"
        (eventbox
          :onhoverlost "(sleep 1;eww update open-hidden-menu=false && eww update open-power=false && eww update open-audio=false)"
          (box
            :class "hidden-box"
            :orientation "v"
            :space-evenly false
            :spacing 8
            (toggle-buttons)
            (brightness-slider)
            (volume-slider)
            (power-menu)
            (audio-menu)
            (box :width 250 :vexpand true)
            (settings)
        )
        )
        
        
    )
)

(defwidget toggle-buttons []
  (box
    :orientation "h"
    :spacing 8
    (toggle-bluetooth)
    (toggle-wifi)
  )
)

(defwidget toggle-bluetooth []
  (button
    :class {bluetooth.state ? "active-button" : "button"}
    :onclick {bluetooth.state ? "bluetoothctl power off" : "bluetoothctl power on"}
    (label :text "")
  )
)

(defwidget toggle-wifi []
  (button
    :class {arraylength(network.wifi_list)>0 ? "active-button" : "button"}
    :onclick {arraylength(network.wifi_list)>0 ? "nmcli radio wifi off" : "nmcli radio wifi on"}
    (label :text "")
  )
)

(defwidget volume-slider []
  (box
    :orientation "v"
    :valign "start"
    :class "slider"
    :height 2
    (label 
      :text "  Volume"
      :halign "start"
    )
    (scale
      :round-digits 5
      :min 0
      :max 100
      :orientation "h"
      :value {audio.volume}
      :onchange "pactl set-sink-volume @DEFAULT_SINK@ {}%"
    )
  )
)
(defwidget brightness-slider []
  (box
    :orientation "v"
    :valign "start"
    :class "slider"
    :height 2
    (label 
      :text "  Brightness"
      :halign "start"
    )
    (scale
      :round-digits 5
      :min 0
      :max 100
      :orientation "h"
      :value {brightness}
      :onchange "brightnessctl s {}%"
    )
  )
)

(defwidget power-menu []
    (expander
        :expanded open-power
        :name "Power Settings"
        :class "power"
        (box
          :orientation "v"
          :spacing 8
          (button
              :onclick "shutdown now"
              :class "button"
              (label :text "    SHUTDOWN")
          )
          (button
            :onclick "hyprctl dispatch exit"
            :class "button"
            (label :text "    LOGOUT")  
          )   
          (button
            :onclick "reboot"
            :class "button"
            (label :text "    REBOOT")
          )
        )
    )
    
)

(defwidget audio-menu []
  (expander
    :expanded open-audio
    :name "Audio Outputs"
    (box
      :orientation "v"
      (for device in {audio.list}
        (button 
          :onclick "pactl set-default-sink ${device.name}; eww update open-audio=false"
          :class {device.description==audio.default.description ? "active-button" : "button"}
          (label :text "${device.description}")
        ) 
      )
    )   
  ) 
)

(defwidget settings []
  (eventbox
    :halign "end"
    :valign "end"
    :height "100%"
    :onclick "systemsettings &"
    :cursor "pointer"
    :class "settings"
    (label :text "")
  )
)